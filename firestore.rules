rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

// Can only read documents if logged into the application. 
    match /groups/{document=**} {
      allow read: if request.auth != null;
    }
    match /compendium/{document=**} {
      allow read, create: if request.auth != null;
    }
    match /compendium/{document} {
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
    }
    match /compendium/{document=**}/likes/{like} {
      allow delete: if request.auth != null && request.auth.uid == resource.id;
    }
    match /updateNotes/{document=**} {
      allow read: if request.auth != null;
    }
    match /metadata/{document=**} {
      allow read;
    }
    
    match /updateNotes/{document}/confirmedBy/{confirmation} {
      allow create, update: if request.auth != null;
    }
    
    match /users/{user} {
//     Allows users to only update or delete their own documents from the database.
        allow read, update, delete: if request.auth != null && request.auth.uid == user;
//     If no document matches the users UID then they are allowed to create one.
        allow read, create: if request.auth != null;
    }

    match /groups/{group} { 
//		 Only allows group owner to delete a group.
    		allow delete: if request.auth != null && request.auth.uid == resource.data.owner
//     Allows only signed in users to read, create, and update groups.
    		allow read, create, update: if request.auth != null
        
          match /loot/{item} {
  //     Only allows signed in users to create, read, update, and delete items.
          allow create, read, update, delete: if request.auth != null
          }

          match /currency/{currency} {
  //     Only allows signed in users to create, read, update, and delete currency totals.
          allow create, read, update, delete: if request.auth != null
          }

          match /itemOwners/{itemOwner} {
  //     Only allows signed in users to create, read, update, and delete itemOwners.
          allow create, read, update, delete: if request.auth != null
          }

          match /history/{event} {
  //     Only allows signed in users to create and read events.
          allow create, read: if request.auth != null
          }

          match /containers/{container} {
  //     Only allow for party storage container types
          allow read, create, update, delete: if request.auth != null
          }
    }
    
    match /communications/{communication} {
    	allow write: if request.auth != null
    }
  }
}